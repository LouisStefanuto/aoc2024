import numpy as np
import pytest

from aoc2024.day15 import WareHouse


class TestTerrain:
    def test_update_case1(self):
        grid = np.array(
            [
                ["#", "#", "#", "#", "#", "#", "#", "#"],
                ["#", ".", ".", "O", ".", "O", ".", "#"],
                ["#", "#", "@", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", "O", ".", ".", "#"],
                ["#", ".", "#", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", ".", ".", ".", "#"],
                ["#", "#", "#", "#", "#", "#", "#", "#"],
            ]
        )
        terrain = WareHouse(grid)
        terrain.update("<")

        expected = np.array(
            [
                ["#", "#", "#", "#", "#", "#", "#", "#"],
                ["#", ".", ".", "O", ".", "O", ".", "#"],
                ["#", "#", "@", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", "O", ".", ".", "#"],
                ["#", ".", "#", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", ".", ".", ".", "#"],
                ["#", "#", "#", "#", "#", "#", "#", "#"],
            ]
        )

        assert np.array_equal(terrain.grid, expected)

    def test_update_case2(self):
        grid = np.array(
            [
                ["#", "#", "#", "#", "#", "#", "#", "#"],
                ["#", ".", "@", "O", ".", "O", ".", "#"],
                ["#", "#", ".", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", "O", ".", ".", "#"],
                ["#", ".", "#", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", ".", ".", ".", "#"],
                ["#", "#", "#", "#", "#", "#", "#", "#"],
            ]
        )
        terrain = WareHouse(grid)
        terrain.update(">")

        expected = np.array(
            [
                ["#", "#", "#", "#", "#", "#", "#", "#"],
                ["#", ".", ".", "@", "O", "O", ".", "#"],
                ["#", "#", ".", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", "O", ".", ".", "#"],
                ["#", ".", "#", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", "O", ".", ".", "#"],
                ["#", ".", ".", ".", ".", ".", ".", "#"],
                ["#", "#", "#", "#", "#", "#", "#", "#"],
            ]
        )

        assert np.array_equal(terrain.grid, expected)

    def test_compute_cost(self):
        grid = np.array(
            [
                ["#", "#", "#"],
                ["#", "O", "@"],
                ["#", "O", "."],
            ]
        )
        terrain = WareHouse(grid)
        assert terrain.compute_cost() == 101 + 201


if __name__ == "__main__":
    pytest.main()
